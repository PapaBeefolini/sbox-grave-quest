<?xml version="1.0"?>
<doc>
    <assembly>
        <name>package.library.facepunch.libevents</name>
    </assembly>
    <members>
        <member name="T:Sandbox.Events.EarlyAttribute">
            <summary>
            Only valid on <see cref="M:Sandbox.Events.IGameEventHandler`1.OnGameEvent(`0)"/> implementations. Forces this
            event handler to be invoked before any handlers not marked as early, except if more specific
            constraints are given (i.e., <see cref="T:Sandbox.Events.BeforeAttribute`1"/>, <see cref="T:Sandbox.Events.AfterAttribute`1"/>).
            </summary>
        </member>
        <member name="T:Sandbox.Events.LateAttribute">
            <summary>
            Only valid on <see cref="M:Sandbox.Events.IGameEventHandler`1.OnGameEvent(`0)"/> implementations. Forces this
            event handler to be invoked after any handlers not marked as late, except if more specific
            constraints are given (i.e., <see cref="T:Sandbox.Events.BeforeAttribute`1"/>, <see cref="T:Sandbox.Events.AfterAttribute`1"/>).
            </summary>
        </member>
        <member name="T:Sandbox.Events.BeforeAttribute`1">
            <summary>
            Only valid on <see cref="M:Sandbox.Events.IGameEventHandler`1.OnGameEvent(`0)"/> implementations. Forces this
            event handler to be invoked before any handlers in the specified type.
            </summary>
        </member>
        <member name="T:Sandbox.Events.AfterAttribute`1">
            <summary>
            Only valid on <see cref="M:Sandbox.Events.IGameEventHandler`1.OnGameEvent(`0)"/> implementations. Forces this
            event handler to be invoked after any handlers in the specified type.
            </summary>
        </member>
        <member name="T:Sandbox.Events.IGameEvent">
            <summary>
            Interface for event payloads that can be listened for by <see cref="T:Sandbox.Events.IGameEventHandler`1"/>s.
            </summary>
        </member>
        <member name="T:Sandbox.Events.IGameEventHandler`1">
            <summary>
            Interface for components that handle game events with a payload of type <see cref="!:T"/>.
            </summary>
            <typeparam name="T">Event payload type.</typeparam>
        </member>
        <member name="M:Sandbox.Events.IGameEventHandler`1.OnGameEvent(`0)">
            <summary>
            Called when an event with payload of type <see cref="!:T"/> is dispatched on a <see cref="T:Sandbox.GameObject"/>
            that contains this component, including on a descendant.
            </summary>
            <param name="eventArgs">Event payload.</param>
        </member>
        <member name="T:Sandbox.Events.GameEvent">
            <summary>
            Helper for dispatching game events in a scene.
            </summary>
        </member>
        <member name="M:Sandbox.Events.GameEvent.Dispatch``1(Sandbox.GameObject,``0)">
            <summary>
            Notifies all <see cref="T:Sandbox.Events.IGameEventHandler`1"/> components that are within <paramref name="root"/>,
            with a payload of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Sandbox.Events.GameEventComponent`1">
            <summary>
            Base class for components that expose game events to Action Graph.
            </summary>
        </member>
        <member name="P:Sandbox.Events.GameEventComponent`1.OnEvent">
            <summary>
            Action invoked when the <typeparamref name="T"/> event is dispatched.
            </summary>
        </member>
        <member name="T:Sandbox.Events.SortingHelper">
            <summary>
            Generate an ordering based on a set of first-most and last-most items, and
            individual constraints between pairs of items. All first-most items will be
            ordered before all last-most items, and any other items will be put in the
            middle unless forced to be elsewhere by a constraint.
            </summary>
        </member>
    </members>
</doc>
